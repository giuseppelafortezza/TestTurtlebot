#!/usr/bin/env python
PACKAGE = "controller"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

cont = gen.add_group("CONTROLLER PARAMETERS")
typeMode = gen.add_group("CONTROLLER TYPE")

polygonMode = typeMode.add_group("Auto controller")
pointMode = typeMode.add_group("Point controller")


cont.add("kp1", double_t, 0, "Linear proportional controller gain", 0.2, 0, 10)
cont.add("kp2", double_t, 0, "Angular proportional controller gain", -0.5, -10, 0)
cont.add("ki1", double_t, 0, "Linear integral controller gain", 0, -0.1, 0.1)
cont.add("ki2", double_t, 0, "Angular integral controller gain", 0, -0.1, 0.1)
cont.add("RESET",   bool_t,   0, "Reset controller parameters",  False)

polygon_enum = gen.enum([ gen.const("Triangle",    int_t, 3,  "The reference is a triangle"),
                          gen.const("Square",      int_t, 4,  "The reference is a square"),
                          gen.const("Pentagon",    int_t, 5,  "The reference is a pentagon"),
                          gen.const("Exagon",      int_t, 6,  "The reference is an hexagon"),
                          gen.const("Heptagon",    int_t, 7,  "The reference is an heptagon"),
                          gen.const("Octagon",     int_t, 8,  "The reference is a octagon"),
                          gen.const("Decagon",     int_t, 10, "The reference is a decagon"),
                          gen.const("Dodecagon",   int_t, 12, "The reference is a dodecagon")],
                     "An enum for choose the polygon")

                     
                     
typeMode.add("AUTO",   bool_t,   0, "Set auto controller (0)",  False)
typeMode.add("POINT",   bool_t,   0, "Set point controller (1)",  True)
                    
polygonMode.add("Polygon", int_t, 3, "Select the reference polygon", 3, 3, 12, edit_method=polygon_enum)




pointMode.add("x", double_t, 0, "Point position (x axis)", 0, -10, 10)
pointMode.add("y", double_t, 0, "Point position (y axis)", 0, -10, 10)
pointMode.add("z", double_t, 0, "Point position (z axis)", 0, -10, 10)
pointMode.add("Apply",   bool_t,   0, "Apply settings",  False)




exit(gen.generate(PACKAGE, "controller", "config_tool"))